# Maintainer: Samir Benmendil <samir.benmendil[at]gmail[dot]com>
# Contributer: aur2ccr (http://ddg.gg/?q=!ccr+aur2ccr)
# Contributer: jimmy-6 <jakub.jarozek {at} gmail.com>

pkgname=shadowgrounds-survivor
pkgver=Update1
pkgrel=1
pkgdesc="[Humble Bundle Frozenbyte,Frozen Synapse] A 3D sci-fi alien shooter - sequel to Shadowgrounds"
url="http://shadowgroundsgame.com/survivor/site_new/index.php"
license=('custom: "commercial"')
arch=('i686' 'x86_64')
makedepends=('unzip')
source=('shadowgrounds-survivor.sh' 'shadowgrounds-survivor-launcher.sh' 'shadowgrounds-survivor.desktop')
md5sums=('5e54db6c4c1689b7ad33f16d01adca8a'
         '9c7028540e363b94d12579f7d76dd7d2'
         '8bf1f57c63c554d30929f977803b07cf')

 [[ $CARCH = 'i686' ]]   && depends=('libglade' 'mesa' 'openal')
if [[ $CARCH = 'x86_64' ]]; then
    depends=('lib32-libglade' 'lib32-mesa' 'lib32-openal')
     [[ -f "/usr/lib/libpulse.so" ]] && depends=("${depends[@]}" 'lib32-libpulse' 'lib32-alsa-plugins')
     [[ -f "/usr/lib/libnvidia-cfg.so" ]] && depends=("${depends[@]}" 'lib32-nvidia-utils')
fi 

PKGEXT=".pkg.tar"
_archive="survivorUpdate1.run"
_archive_md5='6c38a1f3fe555b4d3f3e0a9a81a7d743'

_bundle=('humblebundlefrozen' 'humblebundlesynapse')

_humble() {
  if [[ -f "${_gamedir}/${_archive}" ]]; then
    ln -sf "${_gamedir}/${_archive}"
  fi

  if [ ! -f "${_archive}" ]; then
    for bundle in ${_bundle[@]}; do
      case ${bundle} in
        "humblebundle"*) _key="_humblebundle${bundle:12}key";;
        *) continue;;
      esac
      if [ -n "${!_key}" ]; then
        msg2 "Getting your unique ${pkgname} download location."
        _uri="$(curl -s "http://www.humblebundle.com/downloads?key=${!_key}" | grep "${_archive}" | cut -d "'" -f 10)"
        wget $_uri
        mv ${_archive}* ${_archive}
        break
      fi
    done
    if [ -z "${!_key}" -a ! -f "${startdir}/${_archive}" ]; then
      error "Unable to find \"${_archive}\"." 
      plain "You should run one of these commands before installing this pkg."
      for bundle in ${_bundle[@]}; do
        plain "$ export _${bundle}key=<your-${bundle}-key>"
      done
      plain "$ export _gamedir=<dir/to/${_archive}>"
      exit 1
    fi
  fi
  if ! echo "${_archive_md5}  ${_archive}" | md5sum -c --quiet; then
    echo "Invalid checksum for ${_archive}"
    return 1
  fi
  unset _key _uri _archive_md5 _bundle
}

build() {
  _humble

  cd "${srcdir}"
  if [ ! -f "${_archive}" ]; then
    wget $_uri
    mv ${_archive}* ${_archive}
  fi
  if ! echo "${_archive_md5}  ${_archive}" | md5sum -c --quiet; then
    echo "Invalid checksum for ${_archive}"
    return 1
  fi
  unzip -o "${_archive}" -d "${pkgname}" || true
  unset _archive _archive_md5 _uri
}

package(){

  # directories
  install -d ${pkgdir}/opt/${pkgname}
  cd ${srcdir}/${pkgname}
  rm lib32/libopenal* lib32/libasound* lib32/libvorbis* lib32/libogg*
  cp -dpr --no-preserve=ownership data Config lib32 Profiles survival "${pkgdir}/opt/${pkgname}"

#  #fix permissions
#  find ${pkgdir}/opt/${pkgname} -type d -exec chmod 755 {} \;
#  find ${pkgdir}/opt/${pkgname}/{Config,data,Profiles} -type f -exec chmod 644 {} \;
#  chmod -R 755 ${pkgdir}/opt/${pkgname}/lib32

  #other data files
  install -Dm644 data[1-5].fbz survivor-launcher.glade survivor-logo.png \
                 Survivor.xpm ${pkgdir}/opt/${pkgname}
  
  # startup scripts
  install -Dm755 ${srcdir}/shadowgrounds-survivor.sh ${pkgdir}/usr/bin/shadowgrounds-survivor
  install -Dm755 ${srcdir}/shadowgrounds-survivor-launcher.sh ${pkgdir}/usr/bin/shadowgrounds-survivor-launcher

  # execs
  install -Dm755 survivor-bin ${pkgdir}/opt/${pkgname}/survivor-bin
  install -Dm755 survivor-launcher ${pkgdir}/opt/${pkgname}/survivor-launcher

  # desktop entry
  install -Dm644 ${srcdir}/shadowgrounds-survivor.desktop ${pkgdir}/usr/share/applications/shadowgrounds-survivor.desktop
  
}


